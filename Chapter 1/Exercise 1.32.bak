#lang sicp

(define (accumulate combiner null-value term a next b)
  (if (> a b)
      null-value
      (combiner (term a) (accumulate combiner null-value term (next a) next b))))

(define (product a b)
  (* a b))
(define (identity x) x)
(define (inc x) (+ x 1))

(define (factorial n)
  (accumulate product 1 identity 1 inc n))

(factorial 7)